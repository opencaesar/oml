/**
 * 
 * Copyright 2019 California Institute of Technology ("Caltech").
 * U.S. Government sponsorship acknowledged.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */
package io.opencaesar.oml.provider;

import io.opencaesar.oml.util.OmlAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OmlItemProviderAdapterFactory extends OmlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OmlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Vocabulary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyItemProvider vocabularyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Vocabulary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyAdapter() {
		if (vocabularyItemProvider == null) {
			vocabularyItemProvider = new VocabularyItemProvider(this);
		}

		return vocabularyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.VocabularyBundle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyBundleItemProvider vocabularyBundleItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.VocabularyBundle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyBundleAdapter() {
		if (vocabularyBundleItemProvider == null) {
			vocabularyBundleItemProvider = new VocabularyBundleItemProvider(this);
		}

		return vocabularyBundleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Description} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionItemProvider descriptionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Description}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionAdapter() {
		if (descriptionItemProvider == null) {
			descriptionItemProvider = new DescriptionItemProvider(this);
		}

		return descriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionBundle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionBundleItemProvider descriptionBundleItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionBundle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionBundleAdapter() {
		if (descriptionBundleItemProvider == null) {
			descriptionBundleItemProvider = new DescriptionBundleItemProvider(this);
		}

		return descriptionBundleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Aspect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AspectItemProvider aspectItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Aspect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAspectAdapter() {
		if (aspectItemProvider == null) {
			aspectItemProvider = new AspectItemProvider(this);
		}

		return aspectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Concept} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptItemProvider conceptItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Concept}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptAdapter() {
		if (conceptItemProvider == null) {
			conceptItemProvider = new ConceptItemProvider(this);
		}

		return conceptItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationEntityItemProvider relationEntityItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationEntityAdapter() {
		if (relationEntityItemProvider == null) {
			relationEntityItemProvider = new RelationEntityItemProvider(this);
		}

		return relationEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Structure} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructureItemProvider structureItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Structure}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructureAdapter() {
		if (structureItemProvider == null) {
			structureItemProvider = new StructureItemProvider(this);
		}

		return structureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.AnnotationProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationPropertyItemProvider annotationPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.AnnotationProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationPropertyAdapter() {
		if (annotationPropertyItemProvider == null) {
			annotationPropertyItemProvider = new AnnotationPropertyItemProvider(this);
		}

		return annotationPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyItemProvider scalarPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyAdapter() {
		if (scalarPropertyItemProvider == null) {
			scalarPropertyItemProvider = new ScalarPropertyItemProvider(this);
		}

		return scalarPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructuredProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructuredPropertyItemProvider structuredPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructuredProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructuredPropertyAdapter() {
		if (structuredPropertyItemProvider == null) {
			structuredPropertyItemProvider = new StructuredPropertyItemProvider(this);
		}

		return structuredPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.FacetedScalar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FacetedScalarItemProvider facetedScalarItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.FacetedScalar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFacetedScalarAdapter() {
		if (facetedScalarItemProvider == null) {
			facetedScalarItemProvider = new FacetedScalarItemProvider(this);
		}

		return facetedScalarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.EnumeratedScalar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumeratedScalarItemProvider enumeratedScalarItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.EnumeratedScalar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumeratedScalarAdapter() {
		if (enumeratedScalarItemProvider == null) {
			enumeratedScalarItemProvider = new EnumeratedScalarItemProvider(this);
		}

		return enumeratedScalarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ForwardRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardRelationItemProvider forwardRelationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ForwardRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardRelationAdapter() {
		if (forwardRelationItemProvider == null) {
			forwardRelationItemProvider = new ForwardRelationItemProvider(this);
		}

		return forwardRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ReverseRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReverseRelationItemProvider reverseRelationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ReverseRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReverseRelationAdapter() {
		if (reverseRelationItemProvider == null) {
			reverseRelationItemProvider = new ReverseRelationItemProvider(this);
		}

		return reverseRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Rule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleItemProvider ruleItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Rule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleAdapter() {
		if (ruleItemProvider == null) {
			ruleItemProvider = new RuleItemProvider(this);
		}

		return ruleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructureInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructureInstanceItemProvider structureInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructureInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructureInstanceAdapter() {
		if (structureInstanceItemProvider == null) {
			structureInstanceItemProvider = new StructureInstanceItemProvider(this);
		}

		return structureInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ConceptInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptInstanceItemProvider conceptInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ConceptInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptInstanceAdapter() {
		if (conceptInstanceItemProvider == null) {
			conceptInstanceItemProvider = new ConceptInstanceItemProvider(this);
		}

		return conceptInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationInstanceItemProvider relationInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationInstanceAdapter() {
		if (relationInstanceItemProvider == null) {
			relationInstanceItemProvider = new RelationInstanceItemProvider(this);
		}

		return relationInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.AspectReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AspectReferenceItemProvider aspectReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.AspectReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAspectReferenceAdapter() {
		if (aspectReferenceItemProvider == null) {
			aspectReferenceItemProvider = new AspectReferenceItemProvider(this);
		}

		return aspectReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ConceptReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptReferenceItemProvider conceptReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ConceptReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptReferenceAdapter() {
		if (conceptReferenceItemProvider == null) {
			conceptReferenceItemProvider = new ConceptReferenceItemProvider(this);
		}

		return conceptReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationEntityReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationEntityReferenceItemProvider relationEntityReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationEntityReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationEntityReferenceAdapter() {
		if (relationEntityReferenceItemProvider == null) {
			relationEntityReferenceItemProvider = new RelationEntityReferenceItemProvider(this);
		}

		return relationEntityReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructureReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructureReferenceItemProvider structureReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructureReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructureReferenceAdapter() {
		if (structureReferenceItemProvider == null) {
			structureReferenceItemProvider = new StructureReferenceItemProvider(this);
		}

		return structureReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.AnnotationPropertyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationPropertyReferenceItemProvider annotationPropertyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.AnnotationPropertyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationPropertyReferenceAdapter() {
		if (annotationPropertyReferenceItemProvider == null) {
			annotationPropertyReferenceItemProvider = new AnnotationPropertyReferenceItemProvider(this);
		}

		return annotationPropertyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarPropertyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyReferenceItemProvider scalarPropertyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarPropertyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyReferenceAdapter() {
		if (scalarPropertyReferenceItemProvider == null) {
			scalarPropertyReferenceItemProvider = new ScalarPropertyReferenceItemProvider(this);
		}

		return scalarPropertyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructuredPropertyReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructuredPropertyReferenceItemProvider structuredPropertyReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructuredPropertyReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructuredPropertyReferenceAdapter() {
		if (structuredPropertyReferenceItemProvider == null) {
			structuredPropertyReferenceItemProvider = new StructuredPropertyReferenceItemProvider(this);
		}

		return structuredPropertyReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.FacetedScalarReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FacetedScalarReferenceItemProvider facetedScalarReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.FacetedScalarReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFacetedScalarReferenceAdapter() {
		if (facetedScalarReferenceItemProvider == null) {
			facetedScalarReferenceItemProvider = new FacetedScalarReferenceItemProvider(this);
		}

		return facetedScalarReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.EnumeratedScalarReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumeratedScalarReferenceItemProvider enumeratedScalarReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.EnumeratedScalarReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumeratedScalarReferenceAdapter() {
		if (enumeratedScalarReferenceItemProvider == null) {
			enumeratedScalarReferenceItemProvider = new EnumeratedScalarReferenceItemProvider(this);
		}

		return enumeratedScalarReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationReferenceItemProvider relationReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationReferenceAdapter() {
		if (relationReferenceItemProvider == null) {
			relationReferenceItemProvider = new RelationReferenceItemProvider(this);
		}

		return relationReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RuleReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleReferenceItemProvider ruleReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RuleReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleReferenceAdapter() {
		if (ruleReferenceItemProvider == null) {
			ruleReferenceItemProvider = new RuleReferenceItemProvider(this);
		}

		return ruleReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ConceptInstanceReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptInstanceReferenceItemProvider conceptInstanceReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ConceptInstanceReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptInstanceReferenceAdapter() {
		if (conceptInstanceReferenceItemProvider == null) {
			conceptInstanceReferenceItemProvider = new ConceptInstanceReferenceItemProvider(this);
		}

		return conceptInstanceReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationInstanceReference} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationInstanceReferenceItemProvider relationInstanceReferenceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationInstanceReference}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationInstanceReferenceAdapter() {
		if (relationInstanceReferenceItemProvider == null) {
			relationInstanceReferenceItemProvider = new RelationInstanceReferenceItemProvider(this);
		}

		return relationInstanceReferenceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.VocabularyExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyExtensionItemProvider vocabularyExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.VocabularyExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyExtensionAdapter() {
		if (vocabularyExtensionItemProvider == null) {
			vocabularyExtensionItemProvider = new VocabularyExtensionItemProvider(this);
		}

		return vocabularyExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.VocabularyUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyUsageItemProvider vocabularyUsageItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.VocabularyUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyUsageAdapter() {
		if (vocabularyUsageItemProvider == null) {
			vocabularyUsageItemProvider = new VocabularyUsageItemProvider(this);
		}

		return vocabularyUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.VocabularyBundleExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyBundleExtensionItemProvider vocabularyBundleExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.VocabularyBundleExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyBundleExtensionAdapter() {
		if (vocabularyBundleExtensionItemProvider == null) {
			vocabularyBundleExtensionItemProvider = new VocabularyBundleExtensionItemProvider(this);
		}

		return vocabularyBundleExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.VocabularyBundleInclusion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyBundleInclusionItemProvider vocabularyBundleInclusionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.VocabularyBundleInclusion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyBundleInclusionAdapter() {
		if (vocabularyBundleInclusionItemProvider == null) {
			vocabularyBundleInclusionItemProvider = new VocabularyBundleInclusionItemProvider(this);
		}

		return vocabularyBundleInclusionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionExtensionItemProvider descriptionExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionExtensionAdapter() {
		if (descriptionExtensionItemProvider == null) {
			descriptionExtensionItemProvider = new DescriptionExtensionItemProvider(this);
		}

		return descriptionExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionUsageItemProvider descriptionUsageItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionUsageAdapter() {
		if (descriptionUsageItemProvider == null) {
			descriptionUsageItemProvider = new DescriptionUsageItemProvider(this);
		}

		return descriptionUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionBundleExtension} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionBundleExtensionItemProvider descriptionBundleExtensionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionBundleExtension}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionBundleExtensionAdapter() {
		if (descriptionBundleExtensionItemProvider == null) {
			descriptionBundleExtensionItemProvider = new DescriptionBundleExtensionItemProvider(this);
		}

		return descriptionBundleExtensionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionBundleInclusion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionBundleInclusionItemProvider descriptionBundleInclusionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionBundleInclusion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionBundleInclusionAdapter() {
		if (descriptionBundleInclusionItemProvider == null) {
			descriptionBundleInclusionItemProvider = new DescriptionBundleInclusionItemProvider(this);
		}

		return descriptionBundleInclusionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionBundleUsage} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionBundleUsageItemProvider descriptionBundleUsageItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionBundleUsage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionBundleUsageAdapter() {
		if (descriptionBundleUsageItemProvider == null) {
			descriptionBundleUsageItemProvider = new DescriptionBundleUsageItemProvider(this);
		}

		return descriptionBundleUsageItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.SpecializationAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecializationAxiomItemProvider specializationAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.SpecializationAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecializationAxiomAdapter() {
		if (specializationAxiomItemProvider == null) {
			specializationAxiomItemProvider = new SpecializationAxiomItemProvider(this);
		}

		return specializationAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarPropertyRangeRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyRangeRestrictionAxiomItemProvider scalarPropertyRangeRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarPropertyRangeRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyRangeRestrictionAxiomAdapter() {
		if (scalarPropertyRangeRestrictionAxiomItemProvider == null) {
			scalarPropertyRangeRestrictionAxiomItemProvider = new ScalarPropertyRangeRestrictionAxiomItemProvider(this);
		}

		return scalarPropertyRangeRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarPropertyCardinalityRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyCardinalityRestrictionAxiomItemProvider scalarPropertyCardinalityRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarPropertyCardinalityRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyCardinalityRestrictionAxiomAdapter() {
		if (scalarPropertyCardinalityRestrictionAxiomItemProvider == null) {
			scalarPropertyCardinalityRestrictionAxiomItemProvider = new ScalarPropertyCardinalityRestrictionAxiomItemProvider(this);
		}

		return scalarPropertyCardinalityRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarPropertyValueRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyValueRestrictionAxiomItemProvider scalarPropertyValueRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarPropertyValueRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyValueRestrictionAxiomAdapter() {
		if (scalarPropertyValueRestrictionAxiomItemProvider == null) {
			scalarPropertyValueRestrictionAxiomItemProvider = new ScalarPropertyValueRestrictionAxiomItemProvider(this);
		}

		return scalarPropertyValueRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructuredPropertyRangeRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructuredPropertyRangeRestrictionAxiomItemProvider structuredPropertyRangeRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructuredPropertyRangeRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructuredPropertyRangeRestrictionAxiomAdapter() {
		if (structuredPropertyRangeRestrictionAxiomItemProvider == null) {
			structuredPropertyRangeRestrictionAxiomItemProvider = new StructuredPropertyRangeRestrictionAxiomItemProvider(this);
		}

		return structuredPropertyRangeRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructuredPropertyCardinalityRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructuredPropertyCardinalityRestrictionAxiomItemProvider structuredPropertyCardinalityRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructuredPropertyCardinalityRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructuredPropertyCardinalityRestrictionAxiomAdapter() {
		if (structuredPropertyCardinalityRestrictionAxiomItemProvider == null) {
			structuredPropertyCardinalityRestrictionAxiomItemProvider = new StructuredPropertyCardinalityRestrictionAxiomItemProvider(this);
		}

		return structuredPropertyCardinalityRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructuredPropertyValueRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructuredPropertyValueRestrictionAxiomItemProvider structuredPropertyValueRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructuredPropertyValueRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructuredPropertyValueRestrictionAxiomAdapter() {
		if (structuredPropertyValueRestrictionAxiomItemProvider == null) {
			structuredPropertyValueRestrictionAxiomItemProvider = new StructuredPropertyValueRestrictionAxiomItemProvider(this);
		}

		return structuredPropertyValueRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationRangeRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationRangeRestrictionAxiomItemProvider relationRangeRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationRangeRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationRangeRestrictionAxiomAdapter() {
		if (relationRangeRestrictionAxiomItemProvider == null) {
			relationRangeRestrictionAxiomItemProvider = new RelationRangeRestrictionAxiomItemProvider(this);
		}

		return relationRangeRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationCardinalityRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationCardinalityRestrictionAxiomItemProvider relationCardinalityRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationCardinalityRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationCardinalityRestrictionAxiomAdapter() {
		if (relationCardinalityRestrictionAxiomItemProvider == null) {
			relationCardinalityRestrictionAxiomItemProvider = new RelationCardinalityRestrictionAxiomItemProvider(this);
		}

		return relationCardinalityRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationTargetRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationTargetRestrictionAxiomItemProvider relationTargetRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationTargetRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationTargetRestrictionAxiomAdapter() {
		if (relationTargetRestrictionAxiomItemProvider == null) {
			relationTargetRestrictionAxiomItemProvider = new RelationTargetRestrictionAxiomItemProvider(this);
		}

		return relationTargetRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.KeyAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyAxiomItemProvider keyAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.KeyAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyAxiomAdapter() {
		if (keyAxiomItemProvider == null) {
			keyAxiomItemProvider = new KeyAxiomItemProvider(this);
		}

		return keyAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ConceptTypeAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptTypeAssertionItemProvider conceptTypeAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ConceptTypeAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptTypeAssertionAdapter() {
		if (conceptTypeAssertionItemProvider == null) {
			conceptTypeAssertionItemProvider = new ConceptTypeAssertionItemProvider(this);
		}

		return conceptTypeAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationTypeAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationTypeAssertionItemProvider relationTypeAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationTypeAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationTypeAssertionAdapter() {
		if (relationTypeAssertionItemProvider == null) {
			relationTypeAssertionItemProvider = new RelationTypeAssertionItemProvider(this);
		}

		return relationTypeAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarPropertyValueAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyValueAssertionItemProvider scalarPropertyValueAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarPropertyValueAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyValueAssertionAdapter() {
		if (scalarPropertyValueAssertionItemProvider == null) {
			scalarPropertyValueAssertionItemProvider = new ScalarPropertyValueAssertionItemProvider(this);
		}

		return scalarPropertyValueAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.StructuredPropertyValueAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StructuredPropertyValueAssertionItemProvider structuredPropertyValueAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.StructuredPropertyValueAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStructuredPropertyValueAssertionAdapter() {
		if (structuredPropertyValueAssertionItemProvider == null) {
			structuredPropertyValueAssertionItemProvider = new StructuredPropertyValueAssertionItemProvider(this);
		}

		return structuredPropertyValueAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.LinkAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinkAssertionItemProvider linkAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.LinkAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinkAssertionAdapter() {
		if (linkAssertionItemProvider == null) {
			linkAssertionItemProvider = new LinkAssertionItemProvider(this);
		}

		return linkAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.EntityPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityPredicateItemProvider entityPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.EntityPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityPredicateAdapter() {
		if (entityPredicateItemProvider == null) {
			entityPredicateItemProvider = new EntityPredicateItemProvider(this);
		}

		return entityPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationEntityPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationEntityPredicateItemProvider relationEntityPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationEntityPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationEntityPredicateAdapter() {
		if (relationEntityPredicateItemProvider == null) {
			relationEntityPredicateItemProvider = new RelationEntityPredicateItemProvider(this);
		}

		return relationEntityPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationPredicateItemProvider relationPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationPredicateAdapter() {
		if (relationPredicateItemProvider == null) {
			relationPredicateItemProvider = new RelationPredicateItemProvider(this);
		}

		return relationPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.SameAsPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SameAsPredicateItemProvider sameAsPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.SameAsPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSameAsPredicateAdapter() {
		if (sameAsPredicateItemProvider == null) {
			sameAsPredicateItemProvider = new SameAsPredicateItemProvider(this);
		}

		return sameAsPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DifferentFromPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DifferentFromPredicateItemProvider differentFromPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DifferentFromPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDifferentFromPredicateAdapter() {
		if (differentFromPredicateItemProvider == null) {
			differentFromPredicateItemProvider = new DifferentFromPredicateItemProvider(this);
		}

		return differentFromPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.QuotedLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuotedLiteralItemProvider quotedLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.QuotedLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuotedLiteralAdapter() {
		if (quotedLiteralItemProvider == null) {
			quotedLiteralItemProvider = new QuotedLiteralItemProvider(this);
		}

		return quotedLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.IntegerLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerLiteralItemProvider integerLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.IntegerLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerLiteralAdapter() {
		if (integerLiteralItemProvider == null) {
			integerLiteralItemProvider = new IntegerLiteralItemProvider(this);
		}

		return integerLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DecimalLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalLiteralItemProvider decimalLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DecimalLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalLiteralAdapter() {
		if (decimalLiteralItemProvider == null) {
			decimalLiteralItemProvider = new DecimalLiteralItemProvider(this);
		}

		return decimalLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DoubleLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoubleLiteralItemProvider doubleLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DoubleLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoubleLiteralAdapter() {
		if (doubleLiteralItemProvider == null) {
			doubleLiteralItemProvider = new DoubleLiteralItemProvider(this);
		}

		return doubleLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.BooleanLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanLiteralItemProvider booleanLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.BooleanLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanLiteralAdapter() {
		if (booleanLiteralItemProvider == null) {
			booleanLiteralItemProvider = new BooleanLiteralItemProvider(this);
		}

		return booleanLiteralItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (vocabularyItemProvider != null) vocabularyItemProvider.dispose();
		if (vocabularyBundleItemProvider != null) vocabularyBundleItemProvider.dispose();
		if (descriptionItemProvider != null) descriptionItemProvider.dispose();
		if (descriptionBundleItemProvider != null) descriptionBundleItemProvider.dispose();
		if (aspectItemProvider != null) aspectItemProvider.dispose();
		if (conceptItemProvider != null) conceptItemProvider.dispose();
		if (relationEntityItemProvider != null) relationEntityItemProvider.dispose();
		if (structureItemProvider != null) structureItemProvider.dispose();
		if (annotationPropertyItemProvider != null) annotationPropertyItemProvider.dispose();
		if (scalarPropertyItemProvider != null) scalarPropertyItemProvider.dispose();
		if (structuredPropertyItemProvider != null) structuredPropertyItemProvider.dispose();
		if (facetedScalarItemProvider != null) facetedScalarItemProvider.dispose();
		if (enumeratedScalarItemProvider != null) enumeratedScalarItemProvider.dispose();
		if (forwardRelationItemProvider != null) forwardRelationItemProvider.dispose();
		if (reverseRelationItemProvider != null) reverseRelationItemProvider.dispose();
		if (ruleItemProvider != null) ruleItemProvider.dispose();
		if (structureInstanceItemProvider != null) structureInstanceItemProvider.dispose();
		if (conceptInstanceItemProvider != null) conceptInstanceItemProvider.dispose();
		if (relationInstanceItemProvider != null) relationInstanceItemProvider.dispose();
		if (aspectReferenceItemProvider != null) aspectReferenceItemProvider.dispose();
		if (conceptReferenceItemProvider != null) conceptReferenceItemProvider.dispose();
		if (relationEntityReferenceItemProvider != null) relationEntityReferenceItemProvider.dispose();
		if (structureReferenceItemProvider != null) structureReferenceItemProvider.dispose();
		if (annotationPropertyReferenceItemProvider != null) annotationPropertyReferenceItemProvider.dispose();
		if (scalarPropertyReferenceItemProvider != null) scalarPropertyReferenceItemProvider.dispose();
		if (structuredPropertyReferenceItemProvider != null) structuredPropertyReferenceItemProvider.dispose();
		if (facetedScalarReferenceItemProvider != null) facetedScalarReferenceItemProvider.dispose();
		if (enumeratedScalarReferenceItemProvider != null) enumeratedScalarReferenceItemProvider.dispose();
		if (relationReferenceItemProvider != null) relationReferenceItemProvider.dispose();
		if (ruleReferenceItemProvider != null) ruleReferenceItemProvider.dispose();
		if (conceptInstanceReferenceItemProvider != null) conceptInstanceReferenceItemProvider.dispose();
		if (relationInstanceReferenceItemProvider != null) relationInstanceReferenceItemProvider.dispose();
		if (vocabularyExtensionItemProvider != null) vocabularyExtensionItemProvider.dispose();
		if (vocabularyUsageItemProvider != null) vocabularyUsageItemProvider.dispose();
		if (vocabularyBundleExtensionItemProvider != null) vocabularyBundleExtensionItemProvider.dispose();
		if (vocabularyBundleInclusionItemProvider != null) vocabularyBundleInclusionItemProvider.dispose();
		if (descriptionExtensionItemProvider != null) descriptionExtensionItemProvider.dispose();
		if (descriptionUsageItemProvider != null) descriptionUsageItemProvider.dispose();
		if (descriptionBundleExtensionItemProvider != null) descriptionBundleExtensionItemProvider.dispose();
		if (descriptionBundleInclusionItemProvider != null) descriptionBundleInclusionItemProvider.dispose();
		if (descriptionBundleUsageItemProvider != null) descriptionBundleUsageItemProvider.dispose();
		if (specializationAxiomItemProvider != null) specializationAxiomItemProvider.dispose();
		if (scalarPropertyRangeRestrictionAxiomItemProvider != null) scalarPropertyRangeRestrictionAxiomItemProvider.dispose();
		if (scalarPropertyCardinalityRestrictionAxiomItemProvider != null) scalarPropertyCardinalityRestrictionAxiomItemProvider.dispose();
		if (scalarPropertyValueRestrictionAxiomItemProvider != null) scalarPropertyValueRestrictionAxiomItemProvider.dispose();
		if (structuredPropertyRangeRestrictionAxiomItemProvider != null) structuredPropertyRangeRestrictionAxiomItemProvider.dispose();
		if (structuredPropertyCardinalityRestrictionAxiomItemProvider != null) structuredPropertyCardinalityRestrictionAxiomItemProvider.dispose();
		if (structuredPropertyValueRestrictionAxiomItemProvider != null) structuredPropertyValueRestrictionAxiomItemProvider.dispose();
		if (relationRangeRestrictionAxiomItemProvider != null) relationRangeRestrictionAxiomItemProvider.dispose();
		if (relationCardinalityRestrictionAxiomItemProvider != null) relationCardinalityRestrictionAxiomItemProvider.dispose();
		if (relationTargetRestrictionAxiomItemProvider != null) relationTargetRestrictionAxiomItemProvider.dispose();
		if (keyAxiomItemProvider != null) keyAxiomItemProvider.dispose();
		if (conceptTypeAssertionItemProvider != null) conceptTypeAssertionItemProvider.dispose();
		if (relationTypeAssertionItemProvider != null) relationTypeAssertionItemProvider.dispose();
		if (scalarPropertyValueAssertionItemProvider != null) scalarPropertyValueAssertionItemProvider.dispose();
		if (structuredPropertyValueAssertionItemProvider != null) structuredPropertyValueAssertionItemProvider.dispose();
		if (linkAssertionItemProvider != null) linkAssertionItemProvider.dispose();
		if (entityPredicateItemProvider != null) entityPredicateItemProvider.dispose();
		if (relationEntityPredicateItemProvider != null) relationEntityPredicateItemProvider.dispose();
		if (relationPredicateItemProvider != null) relationPredicateItemProvider.dispose();
		if (sameAsPredicateItemProvider != null) sameAsPredicateItemProvider.dispose();
		if (differentFromPredicateItemProvider != null) differentFromPredicateItemProvider.dispose();
		if (quotedLiteralItemProvider != null) quotedLiteralItemProvider.dispose();
		if (integerLiteralItemProvider != null) integerLiteralItemProvider.dispose();
		if (decimalLiteralItemProvider != null) decimalLiteralItemProvider.dispose();
		if (doubleLiteralItemProvider != null) doubleLiteralItemProvider.dispose();
		if (booleanLiteralItemProvider != null) booleanLiteralItemProvider.dispose();
	}

}

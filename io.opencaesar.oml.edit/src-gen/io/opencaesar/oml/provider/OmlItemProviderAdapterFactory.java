/**
 * 
 * Copyright 2019-2022 California Institute of Technology ("Caltech").
 * U.S. Government sponsorship acknowledged.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */
package io.opencaesar.oml.provider;

import io.opencaesar.oml.util.OmlAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OmlItemProviderAdapterFactory extends OmlAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OmlItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Annotation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationItemProvider annotationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Annotation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationAdapter() {
		if (annotationItemProvider == null) {
			annotationItemProvider = new AnnotationItemProvider(this);
		}

		return annotationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Import} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImportItemProvider importItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Import}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImportAdapter() {
		if (importItemProvider == null) {
			importItemProvider = new ImportItemProvider(this);
		}

		return importItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Argument} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentItemProvider argumentItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Argument}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentAdapter() {
		if (argumentItemProvider == null) {
			argumentItemProvider = new ArgumentItemProvider(this);
		}

		return argumentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Vocabulary} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyItemProvider vocabularyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Vocabulary}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyAdapter() {
		if (vocabularyItemProvider == null) {
			vocabularyItemProvider = new VocabularyItemProvider(this);
		}

		return vocabularyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.VocabularyBundle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VocabularyBundleItemProvider vocabularyBundleItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.VocabularyBundle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVocabularyBundleAdapter() {
		if (vocabularyBundleItemProvider == null) {
			vocabularyBundleItemProvider = new VocabularyBundleItemProvider(this);
		}

		return vocabularyBundleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Description} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionItemProvider descriptionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Description}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionAdapter() {
		if (descriptionItemProvider == null) {
			descriptionItemProvider = new DescriptionItemProvider(this);
		}

		return descriptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DescriptionBundle} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DescriptionBundleItemProvider descriptionBundleItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DescriptionBundle}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDescriptionBundleAdapter() {
		if (descriptionBundleItemProvider == null) {
			descriptionBundleItemProvider = new DescriptionBundleItemProvider(this);
		}

		return descriptionBundleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Rule} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleItemProvider ruleItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Rule}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleAdapter() {
		if (ruleItemProvider == null) {
			ruleItemProvider = new RuleItemProvider(this);
		}

		return ruleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.BuiltIn} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuiltInItemProvider builtInItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.BuiltIn}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuiltInAdapter() {
		if (builtInItemProvider == null) {
			builtInItemProvider = new BuiltInItemProvider(this);
		}

		return builtInItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Scalar} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarItemProvider scalarItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Scalar}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarAdapter() {
		if (scalarItemProvider == null) {
			scalarItemProvider = new ScalarItemProvider(this);
		}

		return scalarItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Aspect} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AspectItemProvider aspectItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Aspect}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAspectAdapter() {
		if (aspectItemProvider == null) {
			aspectItemProvider = new AspectItemProvider(this);
		}

		return aspectItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.Concept} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptItemProvider conceptItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.Concept}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptAdapter() {
		if (conceptItemProvider == null) {
			conceptItemProvider = new ConceptItemProvider(this);
		}

		return conceptItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationEntity} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationEntityItemProvider relationEntityItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationEntity}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationEntityAdapter() {
		if (relationEntityItemProvider == null) {
			relationEntityItemProvider = new RelationEntityItemProvider(this);
		}

		return relationEntityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.AnnotationProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnnotationPropertyItemProvider annotationPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.AnnotationProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnnotationPropertyAdapter() {
		if (annotationPropertyItemProvider == null) {
			annotationPropertyItemProvider = new AnnotationPropertyItemProvider(this);
		}

		return annotationPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarPropertyItemProvider scalarPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarPropertyAdapter() {
		if (scalarPropertyItemProvider == null) {
			scalarPropertyItemProvider = new ScalarPropertyItemProvider(this);
		}

		return scalarPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ForwardRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ForwardRelationItemProvider forwardRelationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ForwardRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createForwardRelationAdapter() {
		if (forwardRelationItemProvider == null) {
			forwardRelationItemProvider = new ForwardRelationItemProvider(this);
		}

		return forwardRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ReverseRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReverseRelationItemProvider reverseRelationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ReverseRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReverseRelationAdapter() {
		if (reverseRelationItemProvider == null) {
			reverseRelationItemProvider = new ReverseRelationItemProvider(this);
		}

		return reverseRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.UnreifiedRelation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnreifiedRelationItemProvider unreifiedRelationItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.UnreifiedRelation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnreifiedRelationAdapter() {
		if (unreifiedRelationItemProvider == null) {
			unreifiedRelationItemProvider = new UnreifiedRelationItemProvider(this);
		}

		return unreifiedRelationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ConceptInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConceptInstanceItemProvider conceptInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ConceptInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConceptInstanceAdapter() {
		if (conceptInstanceItemProvider == null) {
			conceptInstanceItemProvider = new ConceptInstanceItemProvider(this);
		}

		return conceptInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationInstanceItemProvider relationInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationInstanceAdapter() {
		if (relationInstanceItemProvider == null) {
			relationInstanceItemProvider = new RelationInstanceItemProvider(this);
		}

		return relationInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.AnonymousConceptInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnonymousConceptInstanceItemProvider anonymousConceptInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.AnonymousConceptInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnonymousConceptInstanceAdapter() {
		if (anonymousConceptInstanceItemProvider == null) {
			anonymousConceptInstanceItemProvider = new AnonymousConceptInstanceItemProvider(this);
		}

		return anonymousConceptInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.AnonymousRelationInstance} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AnonymousRelationInstanceItemProvider anonymousRelationInstanceItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.AnonymousRelationInstance}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAnonymousRelationInstanceAdapter() {
		if (anonymousRelationInstanceItemProvider == null) {
			anonymousRelationInstanceItemProvider = new AnonymousRelationInstanceItemProvider(this);
		}

		return anonymousRelationInstanceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.KeyAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected KeyAxiomItemProvider keyAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.KeyAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createKeyAxiomAdapter() {
		if (keyAxiomItemProvider == null) {
			keyAxiomItemProvider = new KeyAxiomItemProvider(this);
		}

		return keyAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.SpecializationAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpecializationAxiomItemProvider specializationAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.SpecializationAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpecializationAxiomAdapter() {
		if (specializationAxiomItemProvider == null) {
			specializationAxiomItemProvider = new SpecializationAxiomItemProvider(this);
		}

		return specializationAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.InstanceEnumerationAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InstanceEnumerationAxiomItemProvider instanceEnumerationAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.InstanceEnumerationAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInstanceEnumerationAxiomAdapter() {
		if (instanceEnumerationAxiomItemProvider == null) {
			instanceEnumerationAxiomItemProvider = new InstanceEnumerationAxiomItemProvider(this);
		}

		return instanceEnumerationAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.LiteralEnumerationAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LiteralEnumerationAxiomItemProvider literalEnumerationAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.LiteralEnumerationAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLiteralEnumerationAxiomAdapter() {
		if (literalEnumerationAxiomItemProvider == null) {
			literalEnumerationAxiomItemProvider = new LiteralEnumerationAxiomItemProvider(this);
		}

		return literalEnumerationAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.EntityEquivalenceAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntityEquivalenceAxiomItemProvider entityEquivalenceAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.EntityEquivalenceAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntityEquivalenceAxiomAdapter() {
		if (entityEquivalenceAxiomItemProvider == null) {
			entityEquivalenceAxiomItemProvider = new EntityEquivalenceAxiomItemProvider(this);
		}

		return entityEquivalenceAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.ScalarEquivalenceAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScalarEquivalenceAxiomItemProvider scalarEquivalenceAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.ScalarEquivalenceAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScalarEquivalenceAxiomAdapter() {
		if (scalarEquivalenceAxiomItemProvider == null) {
			scalarEquivalenceAxiomItemProvider = new ScalarEquivalenceAxiomItemProvider(this);
		}

		return scalarEquivalenceAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertyEquivalenceAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyEquivalenceAxiomItemProvider propertyEquivalenceAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertyEquivalenceAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyEquivalenceAxiomAdapter() {
		if (propertyEquivalenceAxiomItemProvider == null) {
			propertyEquivalenceAxiomItemProvider = new PropertyEquivalenceAxiomItemProvider(this);
		}

		return propertyEquivalenceAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertyRangeRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyRangeRestrictionAxiomItemProvider propertyRangeRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertyRangeRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyRangeRestrictionAxiomAdapter() {
		if (propertyRangeRestrictionAxiomItemProvider == null) {
			propertyRangeRestrictionAxiomItemProvider = new PropertyRangeRestrictionAxiomItemProvider(this);
		}

		return propertyRangeRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertyCardinalityRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyCardinalityRestrictionAxiomItemProvider propertyCardinalityRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertyCardinalityRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyCardinalityRestrictionAxiomAdapter() {
		if (propertyCardinalityRestrictionAxiomItemProvider == null) {
			propertyCardinalityRestrictionAxiomItemProvider = new PropertyCardinalityRestrictionAxiomItemProvider(this);
		}

		return propertyCardinalityRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertyValueRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyValueRestrictionAxiomItemProvider propertyValueRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertyValueRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyValueRestrictionAxiomAdapter() {
		if (propertyValueRestrictionAxiomItemProvider == null) {
			propertyValueRestrictionAxiomItemProvider = new PropertyValueRestrictionAxiomItemProvider(this);
		}

		return propertyValueRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertySelfRestrictionAxiom} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertySelfRestrictionAxiomItemProvider propertySelfRestrictionAxiomItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertySelfRestrictionAxiom}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertySelfRestrictionAxiomAdapter() {
		if (propertySelfRestrictionAxiomItemProvider == null) {
			propertySelfRestrictionAxiomItemProvider = new PropertySelfRestrictionAxiomItemProvider(this);
		}

		return propertySelfRestrictionAxiomItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.TypeAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypeAssertionItemProvider typeAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.TypeAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypeAssertionAdapter() {
		if (typeAssertionItemProvider == null) {
			typeAssertionItemProvider = new TypeAssertionItemProvider(this);
		}

		return typeAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertyValueAssertion} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyValueAssertionItemProvider propertyValueAssertionItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertyValueAssertion}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyValueAssertionAdapter() {
		if (propertyValueAssertionItemProvider == null) {
			propertyValueAssertionItemProvider = new PropertyValueAssertionItemProvider(this);
		}

		return propertyValueAssertionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.BuiltInPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuiltInPredicateItemProvider builtInPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.BuiltInPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuiltInPredicateAdapter() {
		if (builtInPredicateItemProvider == null) {
			builtInPredicateItemProvider = new BuiltInPredicateItemProvider(this);
		}

		return builtInPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.TypePredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypePredicateItemProvider typePredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.TypePredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypePredicateAdapter() {
		if (typePredicateItemProvider == null) {
			typePredicateItemProvider = new TypePredicateItemProvider(this);
		}

		return typePredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.RelationEntityPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationEntityPredicateItemProvider relationEntityPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.RelationEntityPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationEntityPredicateAdapter() {
		if (relationEntityPredicateItemProvider == null) {
			relationEntityPredicateItemProvider = new RelationEntityPredicateItemProvider(this);
		}

		return relationEntityPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.PropertyPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyPredicateItemProvider propertyPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.PropertyPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyPredicateAdapter() {
		if (propertyPredicateItemProvider == null) {
			propertyPredicateItemProvider = new PropertyPredicateItemProvider(this);
		}

		return propertyPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.SameAsPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SameAsPredicateItemProvider sameAsPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.SameAsPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSameAsPredicateAdapter() {
		if (sameAsPredicateItemProvider == null) {
			sameAsPredicateItemProvider = new SameAsPredicateItemProvider(this);
		}

		return sameAsPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DifferentFromPredicate} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DifferentFromPredicateItemProvider differentFromPredicateItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DifferentFromPredicate}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDifferentFromPredicateAdapter() {
		if (differentFromPredicateItemProvider == null) {
			differentFromPredicateItemProvider = new DifferentFromPredicateItemProvider(this);
		}

		return differentFromPredicateItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.QuotedLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QuotedLiteralItemProvider quotedLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.QuotedLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQuotedLiteralAdapter() {
		if (quotedLiteralItemProvider == null) {
			quotedLiteralItemProvider = new QuotedLiteralItemProvider(this);
		}

		return quotedLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.IntegerLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerLiteralItemProvider integerLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.IntegerLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerLiteralAdapter() {
		if (integerLiteralItemProvider == null) {
			integerLiteralItemProvider = new IntegerLiteralItemProvider(this);
		}

		return integerLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DecimalLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalLiteralItemProvider decimalLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DecimalLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalLiteralAdapter() {
		if (decimalLiteralItemProvider == null) {
			decimalLiteralItemProvider = new DecimalLiteralItemProvider(this);
		}

		return decimalLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.DoubleLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DoubleLiteralItemProvider doubleLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.DoubleLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDoubleLiteralAdapter() {
		if (doubleLiteralItemProvider == null) {
			doubleLiteralItemProvider = new DoubleLiteralItemProvider(this);
		}

		return doubleLiteralItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link io.opencaesar.oml.BooleanLiteral} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanLiteralItemProvider booleanLiteralItemProvider;

	/**
	 * This creates an adapter for a {@link io.opencaesar.oml.BooleanLiteral}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanLiteralAdapter() {
		if (booleanLiteralItemProvider == null) {
			booleanLiteralItemProvider = new BooleanLiteralItemProvider(this);
		}

		return booleanLiteralItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public void dispose() {
		if (annotationItemProvider != null) annotationItemProvider.dispose();
		if (importItemProvider != null) importItemProvider.dispose();
		if (argumentItemProvider != null) argumentItemProvider.dispose();
		if (vocabularyItemProvider != null) vocabularyItemProvider.dispose();
		if (vocabularyBundleItemProvider != null) vocabularyBundleItemProvider.dispose();
		if (descriptionItemProvider != null) descriptionItemProvider.dispose();
		if (descriptionBundleItemProvider != null) descriptionBundleItemProvider.dispose();
		if (ruleItemProvider != null) ruleItemProvider.dispose();
		if (builtInItemProvider != null) builtInItemProvider.dispose();
		if (scalarItemProvider != null) scalarItemProvider.dispose();
		if (aspectItemProvider != null) aspectItemProvider.dispose();
		if (conceptItemProvider != null) conceptItemProvider.dispose();
		if (relationEntityItemProvider != null) relationEntityItemProvider.dispose();
		if (annotationPropertyItemProvider != null) annotationPropertyItemProvider.dispose();
		if (scalarPropertyItemProvider != null) scalarPropertyItemProvider.dispose();
		if (forwardRelationItemProvider != null) forwardRelationItemProvider.dispose();
		if (reverseRelationItemProvider != null) reverseRelationItemProvider.dispose();
		if (unreifiedRelationItemProvider != null) unreifiedRelationItemProvider.dispose();
		if (conceptInstanceItemProvider != null) conceptInstanceItemProvider.dispose();
		if (relationInstanceItemProvider != null) relationInstanceItemProvider.dispose();
		if (anonymousConceptInstanceItemProvider != null) anonymousConceptInstanceItemProvider.dispose();
		if (anonymousRelationInstanceItemProvider != null) anonymousRelationInstanceItemProvider.dispose();
		if (keyAxiomItemProvider != null) keyAxiomItemProvider.dispose();
		if (specializationAxiomItemProvider != null) specializationAxiomItemProvider.dispose();
		if (instanceEnumerationAxiomItemProvider != null) instanceEnumerationAxiomItemProvider.dispose();
		if (literalEnumerationAxiomItemProvider != null) literalEnumerationAxiomItemProvider.dispose();
		if (entityEquivalenceAxiomItemProvider != null) entityEquivalenceAxiomItemProvider.dispose();
		if (scalarEquivalenceAxiomItemProvider != null) scalarEquivalenceAxiomItemProvider.dispose();
		if (propertyEquivalenceAxiomItemProvider != null) propertyEquivalenceAxiomItemProvider.dispose();
		if (propertyRangeRestrictionAxiomItemProvider != null) propertyRangeRestrictionAxiomItemProvider.dispose();
		if (propertyCardinalityRestrictionAxiomItemProvider != null) propertyCardinalityRestrictionAxiomItemProvider.dispose();
		if (propertyValueRestrictionAxiomItemProvider != null) propertyValueRestrictionAxiomItemProvider.dispose();
		if (propertySelfRestrictionAxiomItemProvider != null) propertySelfRestrictionAxiomItemProvider.dispose();
		if (typeAssertionItemProvider != null) typeAssertionItemProvider.dispose();
		if (propertyValueAssertionItemProvider != null) propertyValueAssertionItemProvider.dispose();
		if (builtInPredicateItemProvider != null) builtInPredicateItemProvider.dispose();
		if (typePredicateItemProvider != null) typePredicateItemProvider.dispose();
		if (relationEntityPredicateItemProvider != null) relationEntityPredicateItemProvider.dispose();
		if (propertyPredicateItemProvider != null) propertyPredicateItemProvider.dispose();
		if (sameAsPredicateItemProvider != null) sameAsPredicateItemProvider.dispose();
		if (differentFromPredicateItemProvider != null) differentFromPredicateItemProvider.dispose();
		if (quotedLiteralItemProvider != null) quotedLiteralItemProvider.dispose();
		if (integerLiteralItemProvider != null) integerLiteralItemProvider.dispose();
		if (decimalLiteralItemProvider != null) decimalLiteralItemProvider.dispose();
		if (doubleLiteralItemProvider != null) doubleLiteralItemProvider.dispose();
		if (booleanLiteralItemProvider != null) booleanLiteralItemProvider.dispose();
	}

}
